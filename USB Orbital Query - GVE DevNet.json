{
  "workflow": {
    "unique_name": "definition_workflow_0234GRLTWV1BM05W0ECxY9TsYtVFSnnmjui",
    "name": "USB Orbital Query - GVE DevNet",
    "title": "USB Orbital Query - GVE DevNet",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 2,
          "scope": "local",
          "name": "Orbital Query Wait Time (Minutes)",
          "type": "datatype.integer",
          "description": "How long to wait for Orbital query results in minutes. The longer you wait, the more results you'll probably get since endpoints will answer the query as they come online and receive it",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_0234GRLU4TZKW5MMJkmFySwMX70SMz72iL4",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "This workflow uses Cisco Orbital to query Windows devices for information about connected usb's. The Orbital query run is: windows_connected_usb_monitoring (https://orbital.amp.cisco.com/stock/windows_connected_usb_monitoring)\n\nDocumentation: https://github.com/gve-sw/gve_devnet_securex_orbital_usb_query\n\nTarget Group: Default TargetGroup\n\nTargets: Orbital_For_Access_Token, Orbital_Target\n\nSteps:\n[] Get an API token for Orbital\n[] Execute a catalog query for all windows endpoints using Orbital\n[] Fetch the results of the Orbital query\n[] Output JSON String of Data for Extraction",
      "display_name": "USB Orbital Query - GVE DevNet",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "execute_on_target_group": true,
        "target_group": {
          "target_group_id": "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH",
          "run_on_all_targets": false,
          "selected_target_types": [
            "web-service.endpoint"
          ],
          "use_criteria": {
            "choose_target_using_algorithm": "choose_first_with_matching_criteria",
            "conditions": [
              {
                "operator": "eqi",
                "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                "right_operand": "Orbital_For_Access_Token"
              }
            ]
          }
        }
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_0234GRLYCVBC06W1LN7G5P2oeVurMiW7lvn",
        "name": "Generate Orbital Token",
        "title": "Generate Orbital Token",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Generate Orbital Token",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target_group": true
          },
          "workflow_id": "definition_workflow_022NJA053A1C02w1RSpSRPM1hAE4jnsRxHE",
          "workflow_name": "Generate Orbital Token "
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_0234JA2EJE5VR2BAh3OqTGwEvXEeh4PT7m3",
        "name": "Query All Orbital Endpoints (OS) ",
        "title": "Query All Orbital Endpoints (OS) ",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Query All Orbital Endpoints (OS) ",
          "input": {
            "variable_workflow_0234E5SKO8ZMH4J87UA4vNEQ01pUrEGruQw": "",
            "variable_workflow_0234E60P6BAJ96rPytPCjZxqJw8tivDRXHk": "$activity.definition_activity_0234GRLYCVBC06W1LN7G5P2oeVurMiW7lvn.output.variable_workflow_022NJFK9II0CR1sh20hLnGhqxm2U6V87JK7$",
            "variable_workflow_0234E6YJSM4UZ65pVbBKc7rIWkxyZKl894L": "windows_connected_usb_monitoring",
            "variable_workflow_0234E7HM308W90XHXclsyf3Wk2WSWW5DgqT": "USB Query - SecureX",
            "variable_workflow_0234E7SW0A2F86iQxMoT1AwKTbBjG04zBe0": "",
            "variable_workflow_0234E9AYF75QB1gNSe5Q6BdaYVXXuo9k6Mu": "$workflow.definition_workflow_0234GRLTWV1BM05W0ECxY9TsYtVFSnnmjui.local.variable_workflow_0234GRLU4TZKW5MMJkmFySwMX70SMz72iL4$",
            "variable_workflow_0234E9X32DJ502IUsXMa6C4nLZM5C9Gnhhn": true,
            "variable_workflow_0234EJJ29J2T34icTxjy4EeDLuq6ndLphl5": "windows",
            "variable_workflow_0234JMWNDMHH40khsHsMZNP2vF0MeK0dX2P": "0"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target_group_criteria": true,
            "target_group": {
              "run_on_all_targets": false,
              "use_criteria": {
                "choose_target_using_algorithm": "choose_first_with_matching_criteria",
                "conditions": [
                  {
                    "left_operand": "$targetgroup.web-service endpoint.input.display_name$",
                    "operator": "eq",
                    "right_operand": "Orbital_Target"
                  }
                ]
              }
            }
          },
          "workflow_id": "definition_workflow_0234E3UPXIA2O4EHS9jYGMpRO0MvQjiMNUj",
          "workflow_name": "Query All Orbital Endpoints (OS) "
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_0234GRM24C5G97TWs1IFmHuho2lvlcqsHDo",
        "name": "JSONPath Query",
        "title": "Check for results",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": true,
          "display_name": "Check for results",
          "input_json": "$activity.definition_activity_0234JA2EJE5VR2BAh3OqTGwEvXEeh4PT7m3.output.variable_workflow_0234E7NZDJIFK4W8k8S2pwAkMttOGPxItyR$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.[0].node",
              "jsonpath_query_name": "resultCheck",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_0234GRM3CFEMO4XVBgm9dC9nVkNDgBwWoZu",
        "name": "Condition Block",
        "title": "Were there results?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Were there results?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_0234GRM4D26XN2qg8t3F4gOTztlr0cdIg0Q",
            "name": "Condition Branch",
            "title": "No",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_0234GRM24C5G97TWs1IFmHuho2lvlcqsHDo.output.succeeded$",
                "operator": "eq",
                "right_operand": false
              },
              "continue_on_failure": false,
              "display_name": "No",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_0234GRM5HQRC54VllisW1e4FjQwa4NrkcE9",
                "name": "Completed",
                "title": "No results",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "No results",
                  "result_message": "There weren't any results from the Orbital query",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_0234GRM6EYNJ8531qBkUUEu4MdeNmK4ioMv",
        "name": "Execute Python Script",
        "title": "Format Output Data",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Format Output Data",
          "script": "import sys\nimport json\n\norbitalQuery = json.loads(sys.argv[1])\n\nresult_json = {\"data\": []}\n\nfor node in orbitalQuery:\n  result = {\n    \"hostname\": node[\"hostinfo\"][\"hostname\"],\n    \"node_id\": node[\"node\"],\n    \"machine_id\": node[\"hostinfo\"][\"machine\"],\n    \"lastseen\": node[\"lastseen\"] if node[\"lastseen\"] else \"None\",\n    \"connectedDevices\": []\n  }\n\n  # results of everything connected\n  osQueryResult = node[\"osQueryResult\"][0]\n  if osQueryResult[\"values\"]:\n    for i in range(0, len(osQueryResult[\"values\"]), 5):\n      device = {\n        \"path\": osQueryResult[\"values\"][i + 1],\n        \"last_modified\": osQueryResult[\"values\"][i + 4]\n      }\n      \n      result[\"connectedDevices\"].append(device)\n\n  result_json[\"data\"].append(result)\n\nresult_json = json.dumps(result_json)",
          "script_arguments": [
            "$activity.definition_activity_0234JA2EJE5VR2BAh3OqTGwEvXEeh4PT7m3.output.variable_workflow_0234E7NZDJIFK4W8k8S2pwAkMttOGPxItyR$"
          ],
          "script_queries": [
            {
              "script_query": "result_json",
              "script_query_name": "Result",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_0234KP50ALWGJ3X7RGe0eXfp3JWPrmMMsO8",
        "name": "Read Table from JSON",
        "title": "Read Table from JSON",
        "type": "corejava.read_table_from_json",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Read Table from JSON",
          "input_json": "$activity.definition_activity_0234GRM6EYNJ8531qBkUUEu4MdeNmK4ioMv.output.script_queries.Result$",
          "jsonpath_query": "$.data",
          "persist_output": false,
          "populate_columns": false,
          "skip_execution": false,
          "table_columns": [
            {
              "column_name": "hostname",
              "column_type": "string"
            },
            {
              "column_name": "node_id",
              "column_type": "string"
            },
            {
              "column_name": "machine_id",
              "column_type": "string"
            },
            {
              "column_name": "lastseen",
              "column_type": "string"
            },
            {
              "column_name": "connectedDevices",
              "column_type": "string"
            }
          ]
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "target_groups": {
    "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH": {
      "unique_name": "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH",
      "name": "Default TargetGroup",
      "title": "Default TargetGroup",
      "type": "generic.target_group",
      "base_type": "target_group",
      "version": "1.0.0",
      "targets": [
        {
          "data_target_type": "web-service.endpoint",
          "view_target_type": "web-service.endpoint",
          "include_all_targets": true
        },
        {
          "data_target_type": "email.smtp_endpoint",
          "view_target_type": "email.smtp_endpoint",
          "include_all_targets": true
        }
      ],
      "object_type": "target_group"
    }
  },
  "atomic_workflows": [
    "definition_workflow_022NJA053A1C02w1RSpSRPM1hAE4jnsRxHE",
    "definition_workflow_0234E3UPXIA2O4EHS9jYGMpRO0MvQjiMNUj"
  ],
  "dependent_workflows": [
    "definition_workflow_022NJA053A1C02w1RSpSRPM1hAE4jnsRxHE",
    "definition_workflow_0234E3UPXIA2O4EHS9jYGMpRO0MvQjiMNUj"
  ]
}